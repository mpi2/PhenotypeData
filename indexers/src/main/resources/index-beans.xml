<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

	<context:annotation-config />

	<context:component-scan base-package="org.mousephenotype.cda.db, org.mousephenotype.cda.indexers">
		<context:exclude-filter type="annotation" expression="org.mousephenotype.cda.annotations.ComponentScanNonParticipant" />
    </context:component-scan>

    <!--
        <context:component-scan base-package="org.mousephenotype.cda.utilities">
        </context:component-scan>

        <context:component-scan base-package="org.mousephenotype.cda.solr">
            <context:exclude-filter type="regex" expression="org\.mousephenotype\.cda\.solr\.service.*" />
        </context:component-scan>
    -->

    <bean id="encodedOrganisationConversionMap" class="org.mousephenotype.cda.solr.imits.EncodedOrganisationConversionMap" />


	<!-- Get the datasources from the filesystem overrides -->
	<!-- Creates a MySQL Datasource -->
	<bean id="komp2DataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${datasource.komp2.url}" />
		<property name="username" value="${datasource.komp2.username}" />
		<property name="password" value="${datasource.komp2.password}" />
	</bean>

	<bean id="admintoolsDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${admintoolsurl}" />
		<property name="username" value="${admintoolsusername}" />
		<property name="password" value="${admintoolspassword}" />
	</bean>

	<bean id="ontodbDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${ontodburl}" />
		<property name="username" value="${ontodbusername}" />
		<property name="password" value="${ontodbpassword}" />
	</bean>

	<bean id="goaproDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="${goaprourl}" />
		<property name="username" value="${goaprousername}" />
		<property name="password" value="${goapropassword}" />
	</bean>

	<bean id="uniprotDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="${uniproturl}" />
		<property name="username" value="${uniprotusername}" />
		<property name="password" value="${uniprotpassword}" />
	</bean>

	<bean id="pfamDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="${pfamurl}" />
		<property name="username" value="${pfamusername}" />
		<property name="password" value="${pfampassword}" />
	</bean>


	<!-- Weaves in transactional advice around annotated Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Drives transactions using Hibernate APIs when requested -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- Spring annotated objects -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="komp2DataSource" />
		<property name="packagesToScan" value="org.mousephenotype.cda" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
				<prop key="hibernate.connection.charSet">UTF8</prop>
			</props>
		</property>
	</bean>

	<!-- phenodigm external solr server via HTTP -->
	<bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">
		<constructor-arg index="0" value="${phenodigm.solrserver}" />
		<property name="soTimeout" value="5000" />
	</bean>

	<!-- Beans for writing to the solr servers -->
	<bean id="alleleIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/allele" />
		<constructor-arg index="1" value="10000" /> <!--Queue size -->
		<constructor-arg index="2" value="3" /> <!--Num threads -->
	</bean>

	<bean id="preqcIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/preqc" />
		<constructor-arg index="1" value="10000" /> <!--Queue size -->
		<constructor-arg index="2" value="3" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the experiment core -->
	<bean id="observationIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/experiment" />
		<constructor-arg index="1" value="100000" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the MA core -->
	<bean id="maIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/ma" />
		<constructor-arg index="1" value="100000" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the MA core -->
	<bean id="anatomyIndexing"
		  class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/anatomy" />
		<constructor-arg index="1" value="100000" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the disease core -->
	<bean id="diseaseIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/disease" />
		<constructor-arg index="1" value="1000" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the gene core -->
	<bean id="geneIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/gene" />
		<constructor-arg index="1" value="1000" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the genotype phenotype core -->
	<bean id="genotypePhenotypeIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/genotype-phenotype" />
		<constructor-arg index="1" value="1000" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<bean id="mgiPhenotypeIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/mgi-phenotype" />
		<constructor-arg index="1" value="1000" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the pipeline core -->
	<bean id="pipelineIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/pipeline" />
		<constructor-arg index="1" value="500" /> <!--Queue size -->
		<constructor-arg index="2" value="5" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the samger images (or just images) core -->
	<bean id="sangerImagesIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/images" />
		<constructor-arg index="1" value="2000" /> <!--Queue size -->
		<constructor-arg index="2" value="2" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the MP core -->
	<bean id="mpIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/mp" />
		<constructor-arg index="1" value="200" /> <!--Queue size -->
		<constructor-arg index="2" value="3" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the EMAP core -->
	<bean id="emapIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/emap" />
		<constructor-arg index="1" value="200" /> <!--Queue size -->
		<constructor-arg index="2" value="3" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the autosuggest core -->
	<bean id="autosuggestIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/autosuggest" />
		<constructor-arg index="1" value="1000" /> <!--Queue size -->
		<constructor-arg index="2" value="3" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the impc_images core -->
	<bean id="impcImagesIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/impc_images" />
		<constructor-arg index="1" value="10000" /> <!--Queue size -->
		<constructor-arg index="2" value="3" /> <!--Num threads -->
	</bean>

	<!-- used for concurrently loading the statistical results core -->
	<bean id="statisticalResultsIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0"
			value="${buildIndexesSolrUrl}/statistical-result" />
		<constructor-arg index="1" value="50000" /> <!--Queue size -->
		<constructor-arg index="2" value="6" /> <!--Num threads -->
	</bean>

	<!-- IMPC to GWAS similarity annotation indexing core -->
	<bean id="gwasIndexing"
		class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">
		<constructor-arg index="0" value="${buildIndexesSolrUrl}/gwas" />
		<constructor-arg index="1" value="10000" /> <!--Queue size -->
		<constructor-arg index="2" value="3" /> <!--Num threads -->
	</bean>


	<!-- Global configuration parameters -->
	<bean id="globalConfiguration" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="targetMapClass">
			<value>java.util.HashMap</value>
		</property>
		<property name="sourceMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="version" value="${pom.version}" />
				<entry key="baseUrl" value="${baseUrl}" />
				<entry key="drupalBaseUrl" value="${drupalBaseUrl}" />
				<entry key="solrUrl" value="${solrUrl}" />
				<entry key="internalSolrUrl" value="${internalSolrUrl}" />
				<entry key="mediaBaseUrl" value="${mediaBaseUrl}" />
				<entry key="impcMediaBaseUrl" value="${impcMediaBaseUrl}" />
				<entry key="googleAnalytics" value="${googleAnalytics}" />
				<entry key="liveSite" value="${liveSite}" />
				<entry key="preqcXmlFilename" value="${preqcXmlfile}" />
				<entry key="human2mouseFilename" value="${human2mouseFile}" />
				<entry key="phenodigm.solrserver" value="${phenodigm.solrserver}" />
				<entry key="imits.solr.host" value="${imits.solr.host}" />
				<entry key="buildIndexesSolrUrl" value="${buildIndexesSolrUrl}" />
				<entry key="embryoRestUrl" value="${embryoRestUrl}" />
				<entry key="pdfThumbnailUrl" value="${pdfThumbnailUrl}" />
			</map>
		</property>
	</bean>

	<!-- core indexer beans -->

	<!-- used for concurrently loading the impc_images core -->
	<bean id="mpOntologyService" class="org.mousephenotype.cda.db.dao.MpOntologyDAO" />
	<bean id="maOntologyDAO" class="org.mousephenotype.cda.db.dao.MaOntologyDAO" />
	<bean id="emapOntologyDAO" class="org.mousephenotype.cda.db.dao.EmapOntologyDAO" />
	<bean id="emapaOntologyDAO" class="org.mousephenotype.cda.db.dao.EmapaOntologyDAO" />
	<bean id="gwasDao" class="org.mousephenotype.cda.db.dao.GwasDAO" />

</beans>



